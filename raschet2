import numpy as np
import pandas as pd
import math
import time
import matplotlib
import matplotlib.pyplot as plt
import seaborn as sns
import scipy.stats as st
from tkinter import *
from tkinter import messagebox
 
 
def calculate_bmi():
   mathy_ojid = int(math_ojid.get())
   disp = int(dispersy.get())
   vm_1 = int(vm_m.get())
   n0_1 = int(n0_0.get())
   vg_1 = int(vg_g.get())
   Q_1 = int(qq_q.get())
   vy_1 = int(vy_y.get())
   y_1 = int(yy_y.get())
   x_1 = ((vg_1 / vy_1) * y_1)
   r0_1 = x_1 * 0.05
   x_1 = round(x_1, 1)
   r0_1 = round(r0_1, 1)
   beta = math.sqrt(math.log(1 + (disp/mathy_ojid/mathy_ojid),math.exp(1)))
   alpha = math.log(mathy_ojid,math.exp(1)) - ((beta*beta)/2)
   
 
def  window_1():   
   window = Tk()
   window.title('Вывод результатов')
   frame_1 = Frame(window, padx=12, pady=12)
   frame_1.pack(expand=True)
   Lbl = Label(frame_1, text = f'Начальное значение для годового тоннажа (R0) = {r0_1}', font=('Arial', 14))
   Lbl_2 = Label(frame_1, text = f'Фин. средства, для выполнения годового тоннажа (X) = {x_1}', font=('Arial', 14))
   Lbl_2.grid(column=5, row=9)
   Lbl.grid(column=5, row=12)
   window.geometry('500x400')
   window.mainloop()

class main():   
   window = Tk()
   window.title('Исходные данные')
   window.geometry('600x500')
      
   frame = Frame(window, padx=12, pady=12)
   frame.pack(expand=True)
   
   disper= Label(frame, text="Дисперсия  ")
   disper.grid(row=1, column=1)
   
   mathematic_ojid = Label(frame,text="Математическое ожидание  ")
   mathematic_ojid.grid(row=2, column=1)
   
   n0 = Label(frame,text="Число моделируемых реализаций (n0)  ")
   n0.grid(row=3, column=1)
   
   vm = Label(frame,text="Максимальный пропущенный тоннаж (VM)  ")
   vm.grid(row=4, column=1)

   vg = Label(frame, text="Годовой перевезенный тоннаж (Vg)  ")
   vg.grid(row=5, column=1)

   qq = Label(frame,text="Число типов элементов (Q)  ")
   qq.grid(row=6, column=1)

   vy = Label(frame,text="Значение интервала между поступлениями (Vy)  ")
   vy.grid(row=7, column=1)

   y_y = Label(frame,text="Величина единичного поступления (у)  ")
   y_y.grid(row=8, column=1)

   dispersy = Entry(frame)
   dispersy.grid(row=1, column=2, pady=5)

   math_ojid = Entry(frame)
   math_ojid.grid(row=2, column=2, pady=5)
   
   n0_0 = Entry(frame)
   n0_0.grid(row=3, column=2, pady=5)
   
   vm_m = Entry(frame)
   vm_m.grid(row=4, column=2, pady=5)

   vg_g = Entry(frame)
   vg_g.grid(row=5, column=2, pady=5)

   qq_q = Entry(frame)
   qq_q.grid(row=6, column=2, pady=5)

   vy_y = Entry(frame)
   vy_y.grid(row=7, column=2, pady=5)

   yy_y = Entry(frame)
   yy_y.grid(row=8, column=2, pady=5)
   
   cal_btn = Button(frame, text=' Рассчитать значения ', fg="green", highlightbackground='white', command=calculate_bmi)
   cal_btn.grid(row=9, column=2)
   
   window.mainloop()
